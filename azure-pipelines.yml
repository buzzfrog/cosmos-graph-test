variables:
  buildConfiguration: 'Release'

jobs:
- job: CosmosDB
  pool:
    vmImage: 'vs2017-win2016'
  steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'Build'

    - script: dotnet test test/graph-db-test-tests --logger trx
      displayName: 'Run unit tests'

    - task: PowerShell@2
      displayName: 'Generate graph data'
      inputs:
        targetType: filePath
        filePath: ./build-pipeline/run-cosmosdb-test.ps1

    - script: dotnet test test/cosmos-db-functional-test --logger trx
      displayName: 'Run functional tests'

    - task: PublishTestResults@2
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'

- job: SQLDB
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'Build'

    - script: dotnet test test/graph-db-test-tests --logger trx
      displayName: 'Run unit tests'

    - task: Bash@3
      displayName: 'Generate graph data'
      inputs:
        targetType: filePath
        filePath: ./build-pipeline/run-sqldb-test.sh

    - script: dotnet test test/sql-db-functional-test --logger trx
      displayName: 'Run functional tests'

    - task: PublishTestResults@2
      inputs:
        testRunner: VSTest
        testResultsFiles: '**/*.trx'